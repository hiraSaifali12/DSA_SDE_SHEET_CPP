#include <bits/stdc++.h>
using namespace std;

//----------------------------------------------------
//  1.  bruteForce solution for the SetMatrixZero
//----------------------------------------------------
void rowMark(vector<vector<int>>&matrix ,int i ,int n, int m){
    for(int j=0;j<m;j++){
        if(matrix[i][j]!=0){
            matrix[i][j]=-1;
        }
    }
}
void colMark(vector<vector<int>>&matrix,int j,int n,int m){
    for(int i=0;i<n;i++){
        if(matrix[i][j]!=0){
            matrix[i][j]=-1;
        }
    }
}

vector<vector<int>> zeroMatrixBrute(vector<vector<int>>&matrix ,int n,int m){
    for(int i = 0;i<n;i++){
        for(int j=0;j<m;j++){
            if(matrix[i][j]==0){
                rowMark(matrix,i,n,m);
                colMark(matrix,j,n,m);
            }
        }
    }
    for(int i =0;i<n;i++){
        for(int j=0;j<m;j++){
        if(matrix[i][j]==-1){
            matrix [i][j]=0;
        }
        }
    }
    return matrix;
}
//=========================================================



/*
int main(){
   vector<vector<int>> matrix={{1,1,1},{1,0,1},{1,1,1}};
   int n=matrix.size();
   int m=matrix[0].size();
   vector<vector<int>> final = zeroMatrixBrute(matrix,n,m);
   cout<<"the final metrix is :  "<<endl;
   for(auto it : final){
    for (auto ele : it){
        cout<<ele<<" ";
    }
    cout<<endl;

   }

    return 0;
}*/


//---------------------------------------------------------
// 2 . OPTIMIZE SOLUTION
//---------------------------------------------------------
vector<vector<int>> setMatrixZeroBetter(vector<vector<int>>&matrix,int n, int m)
{
    int row[n]={0};
    int col[m]={0};

    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(matrix[i][j]==0){
                row[i]=1;
                col[j]=1;
            }
        }
    }
    for(int i= 0;i<n;i++){
        for(int j=0;j<m;j++){

        if(row[i] || col[j])
        {
            matrix[i][j]=0;
        }
        }
    }
    return matrix;
}
int main(){
    vector<vector<int>>matrix ={{1,1,1},{1,0,1},{1,1,1}};
    int n= matrix.size();
    int m= matrix[0].size();
   // int mat1={};
    //int mat2={};
    vector<vector<int>> final2= setMatrixZeroBetter(matrix,n,m);
    for (auto it : final2){
        for(auto ele : it){
            cout<<ele<<" ";
        }
        cout<<endl;
    }
    return 0;
}
